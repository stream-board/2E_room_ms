#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Manage Rooms
  description: C# + PostgreSQL
  license:
    name: Software Architecture 2018-I
host: 192.168.99.101:4001
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /room/:
    post:
      summary: Creates a new room
      operationId: createRoom
      parameters:
        - name: IdOwner, NameRoom, DescriptionRoom
          in: body
          required: true
          description: Necesita de el Id del usuario que quiere crear la sala y el nombre de la sala, la descripción de la sala puede ser opcional.
          schema:
            $ref: '#/definitions/RoomInput'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Room'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    get:
      summary: Get a Room list
      operationId: getRoom
      parameters:
        - name: Id
          in: body
          required: true
          description: Necesita de el Id de la sala o ningun valor y retorna las salas que hayan en ese momento. Si no hay retorna una sala default generada en la base de datos.
          schema:
            $ref: '#/definitions/RoomList'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Room'
  /room/{id}:        
    get:
     summary: Returns a Room with this Id if exists.
     operationId: getRoomById
     parameters:
       - name: id
         in: path
         description: The id of the room if exists
         required: true
         type: integer
     responses:
       '200':
         description: Ok
         schema:
           $ref: '#/definitions/Room'
       '404':
         description: Not Found
         
    delete:
     summary: Deletes a room with the given id or eliminate the participant if this IdOwner is different.
     operationId: deleteStudent
     parameters:
       - name: id
         in: path
         description: Borra la sala si el idowner pasado por el body coincide con el idOwner de dicha sala.
         required: true
         type: integer
       - name : idOwner
         in: body
         description: Es el id del usuraio que realiza la peticion, la respuesta depende qué relacion tenga con la sala, si esta en la lista de participantes o es el owner.
         schema:
          $ref: '#/definitions/Room'
          
     responses:
       '200':
         description: Ok
       '400':
           description: Bad Request



definitions:

  Room:
    type: object
    properties:
      id:
        type: integer
      nameroom:
        type: string
      descriptionroom:
        type: string
      idowner:
        type: integer
      participants:
        type: array
        items:
          type: integer

  # Rooms
  RoomInput:
    type: object
    properties:
      IdOwner:
        type: integer
      NameRoom:
        type: string
      DescriptionRoom:
        type: string


  RoomList:
    type: array
    items:
      type: object
      $ref: :'#/definitions/Room'
  
  
# Errors
  ErrorModel:
    type: object
    properties:
      success:
        type: boolean
      errors:
        type: array
        items:
          type: string
          
  